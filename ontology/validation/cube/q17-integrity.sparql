#  In a measureType cube if there is an observation for one measure, there must be a corresponding observation for all other measures at the same dimension values
PREFIX rdf:            <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:           <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos:           <http://www.w3.org/2004/02/skos/core#>
PREFIX qb:             <http://purl.org/linked-data/cube#>
PREFIX xsd:            <http://www.w3.org/2001/XMLSchema#>
PREFIX owl:            <http://www.w3.org/2002/07/owl#>
PREFIX eg:             <http://example.com/abbrv-cube/>
prefix cex: 		   <http://purl.org/weso/ontology/computex#> 

CONSTRUCT {
 _:error a cex:Error .
 _:error cex:errorParam 
	[cex:name "obs1"; cex:value ?obs1 ]  ,
	[cex:name "obs2"; cex:value ?obs2 ]  ,
	[cex:name "dsd"; cex:value ?dsd ]  ,
	[cex:name "numMeasures"; cex:value ?numMeasures ]  ,
	[cex:name "count"; cex:value ?count ]  
	.
 _:error cex:msg "In a measureType cube if there is an observation for one measure, there must be a corresponding observation for all other measures at the same dimension values" .
}
WHERE {
  {
      # Count number of other measures found at each point 
      SELECT ?numMeasures (COUNT(?obs2) AS ?count) WHERE {
          {
              # Find the DSDs and check how many measures they have
              SELECT ?dsd (COUNT(?m) AS ?numMeasures) WHERE {
                  ?dsd qb:component/qb:componentProperty ?m.
                  ?m a qb:MeasureProperty .
              } GROUP BY ?dsd
          }
        
          # Observation in measureType cube
          ?obs1 qb:dataSet/qb:structure ?dsd;
                qb:dataSet ?dataset ;
                qb:measureType ?m1 .
    
          # Other observation at same dimension value
          ?obs2 qb:dataSet ?dataset ;
                qb:measureType ?m2 .
          FILTER NOT EXISTS { 
              ?dsd qb:component/qb:componentProperty ?dim .
              FILTER (?dim != qb:measureType)
              ?dim a qb:DimensionProperty .
              ?obs1 ?dim ?v1 . 
              ?obs2 ?dim ?v2. 
              FILTER (?v1 != ?v2)
          }
          
      } GROUP BY ?obs1 ?numMeasures
        HAVING (?count != ?numMeasures)
  }
}
